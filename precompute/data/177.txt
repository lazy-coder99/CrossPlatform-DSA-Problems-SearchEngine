Hard
Array,Binary Search,Dynamic Programming,Sorting,
Given two integer arraysarr1 and arr2, return the minimum number of operations (possibly zero) neededto make arr1 strictly increasing.
In one operation, you can choose two indices0 <=i < arr1.lengthand0 <= j < arr2.lengthand do the assignmentarr1[i] = arr2[j].
If there is no way to makearr1strictly increasing,return-1.

Example 1:
Input: arr1 = [1,5,3,6,7], arr2 = [1,3,2,4]
Output: 1
Explanation: Replace 5 with 2, then arr1 = [1, 2, 3, 6, 7].

Example 2:
Input: arr1 = [1,5,3,6,7], arr2 = [4,3,1]
Output: 2
Explanation: Replace 5 with 3 and then replace 3 with 4. arr1 = [1, 3, 4, 6, 7].

Example 3:
Input: arr1 = [1,5,3,6,7], arr2 = [1,6,3,3]
Output: -1
Explanation: You can't make arr1 strictly increasing.

Constraints:

1 <= arr1.length, arr2.length <= 2000
0 <= arr1[i], arr2[i] <= 10^9


